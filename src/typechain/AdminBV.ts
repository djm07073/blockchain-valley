/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export interface AdminBVInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "admins"
      | "decreasePoint"
      | "increasePoint"
      | "poaps"
      | "removeAdmin"
      | "removeMember"
      | "setPOAP"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "admins", values: [AddressLike]): string;
  encodeFunctionData(
    functionFragment: "decreasePoint",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increasePoint",
    values: [AddressLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "poaps", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "removeAdmin",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeMember",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setPOAP",
    values: [AddressLike[]]
  ): string;

  decodeFunctionResult(functionFragment: "admins", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decreasePoint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increasePoint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "poaps", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPOAP", data: BytesLike): Result;
}

export interface AdminBV extends BaseContract {
  connect(runner?: ContractRunner | null): AdminBV;
  waitForDeployment(): Promise<this>;

  interface: AdminBVInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  admins: TypedContractMethod<[arg0: AddressLike], [boolean], "view">;

  decreasePoint: TypedContractMethod<
    [member: AddressLike, point: BigNumberish, poapType: BigNumberish],
    [void],
    "nonpayable"
  >;

  increasePoint: TypedContractMethod<
    [member: AddressLike, point: BigNumberish, poapType: BigNumberish],
    [void],
    "nonpayable"
  >;

  poaps: TypedContractMethod<[arg0: BigNumberish], [string], "view">;

  removeAdmin: TypedContractMethod<[admin: AddressLike], [void], "nonpayable">;

  removeMember: TypedContractMethod<
    [member: AddressLike, poapType: BigNumberish],
    [void],
    "nonpayable"
  >;

  setPOAP: TypedContractMethod<[ps: AddressLike[]], [void], "nonpayable">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "admins"
  ): TypedContractMethod<[arg0: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "decreasePoint"
  ): TypedContractMethod<
    [member: AddressLike, point: BigNumberish, poapType: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "increasePoint"
  ): TypedContractMethod<
    [member: AddressLike, point: BigNumberish, poapType: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "poaps"
  ): TypedContractMethod<[arg0: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "removeAdmin"
  ): TypedContractMethod<[admin: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "removeMember"
  ): TypedContractMethod<
    [member: AddressLike, poapType: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setPOAP"
  ): TypedContractMethod<[ps: AddressLike[]], [void], "nonpayable">;

  filters: {};
}
